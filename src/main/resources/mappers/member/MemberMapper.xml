<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.earth.ureverse.member.mapper.MemberMapper">

    <update id="updateIsActive">
        UPDATE USERS
        SET ISACTIVE = #{isActive}, UPDATED_AT = SYSDATE
        WHERE USER_ID = #{userId}
    </update>

    <update id="updateMember" parameterType="map">
        UPDATE USERS
        <set>
            <if test="updateMemberRequestDto.name != null"> NAME = #{updateMemberRequestDto.name}, </if>
            <if test="updateMemberRequestDto.phone != null"> PHONE = #{updateMemberRequestDto.phone}, </if>
            <if test="updateMemberRequestDto.email != null"> EMAIL = #{updateMemberRequestDto.email}, </if>
        </set>
        WHERE USER_ID = #{userId}
    </update>

    <update id="updatePassword">
        UPDATE USERS
        SET PASSWORD = #{encodedPassword}
        WHERE USER_ID = #{userId}
    </update>

    <!--  활성 유저 목록(관리자)  -->
    <select id="getActiveUsers" resultType="com.earth.ureverse.admin.dto.response.ActiveMemberResponse">
        SELECT
            u.user_id AS id,
            u.name,
            u.email,
            u.phone,
            NVL(SUM(CASE WHEN p.status = 'FINISH' THEN p.paid_point ELSE 0 END), 0) AS point,
            NVL(COUNT(CASE WHEN p.status = 'FINISH' THEN p.product_id END), 0) AS sales,
            TO_CHAR(u.created_at, 'YYYY-MM-DD') AS createdAt
        FROM users u
            LEFT JOIN product p ON u.user_id = p.user_id
        WHERE u.email LIKE #{email} || '%'
        AND u.ROLE = 'ROLE_MEMBER'
        AND u.isactive = 'active'
        GROUP BY u.user_id, u.name, u.email, u.phone, u.created_at
        ORDER BY u.created_at DESC
        OFFSET #{pageStart} ROWS FETCH NEXT #{offset} ROWS ONLY
    </select>
    <!--총 활성 유저 수-->
    <select id="countActiveUsers" resultType="long">
        SELECT COUNT(*)
        FROM users u
        WHERE u.email LIKE #{email} || '%'
        AND u.ROLE = 'ROLE_MEMBER'
        AND u.isactive = 'active'
    </select>

    <select id="findMyInfoByUserId" parameterType="long" resultType="com.earth.ureverse.member.dto.response.MemberInfoResponseDto">
        SELECT USER_ID AS userId, NAME, EMAIL, PHONE, ROLE,
        CASE
        WHEN KAKAO_ID IS NOT NULL THEN 1
        ELSE 0
        END AS kakaoLinked
        FROM USERS
        WHERE USER_ID = #{userId}
    </select>

    <select id="countProductStatus" parameterType="long" resultType="map">
        SELECT STATUS, COUNT(*) AS VALUE
        FROM PRODUCT
        WHERE USER_ID = #{userId}
        GROUP BY STATUS
    </select>

</mapper>