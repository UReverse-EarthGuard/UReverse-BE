<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.earth.ureverse.global.mapper.ProductMapper">

    <!-- FINISH 상태 상품 목록 조회 -->
    <select id="getFinishProducts"
            parameterType="com.earth.ureverse.admin.dto.request.ProductSearchRequest"
            resultType="com.earth.ureverse.admin.dto.response.FinishProductResponse">
        SELECT
            p.product_id AS id,
            (
            SELECT pi.url
            FROM product_image pi
            WHERE pi.product_id = p.product_id
            AND ROWNUM = 1
            ) AS image,
            b.name AS brand,
            c.main_name AS categoryMain,
            c.sub_name AS categorySub,
            p.grade AS grade,
            TO_CHAR(p.updated_at, 'YYYY-MM-DD HH24:MI:SS') AS finishDate
        FROM product p
            JOIN brand b ON p.brand_id = b.brand_id
            JOIN category c ON p.category_id = c.category_id
        WHERE p.status = 'FINISH'
            <if test="brand != null and brand != ''">
                AND b.name = #{brand}
            </if>
            <if test="categoryMain != null and categoryMain != ''">
                AND c.main_name = #{categoryMain}
            </if>
            <if test="categorySub != null and categorySub != ''">
                AND c.sub_name = #{categorySub}
            </if>
            <if test="grade != null and grade != ''">
                AND p.grade = #{grade}
            </if>
        ORDER BY p.updated_at DESC
        OFFSET #{pageStart} ROWS FETCH NEXT #{offset} ROWS ONLY
    </select>

    <!-- 총 개수 조회(FINISH 상태 상품 목록) -->
    <select id="countFinishProducts"
            parameterType="com.earth.ureverse.admin.dto.request.ProductSearchRequest"
            resultType="long">
        SELECT COUNT(*)
        FROM product p
        JOIN brand b ON p.brand_id = b.brand_id
        JOIN category c ON p.category_id = c.category_id
        WHERE p.status = 'FINISH'
        <if test="brand != null and brand != ''">
            AND b.name = #{brand}
        </if>
        <if test="categoryMain != null and categoryMain != ''">
            AND c.main_name = #{categoryMain}
        </if>
        <if test="categorySub != null and categorySub != ''">
            AND c.sub_name = #{categorySub}
        </if>
        <if test="grade != null and grade != ''">
            AND p.grade = #{grade}
        </if>
    </select>

    <!-- 검수 완료 상품 검색 -->
    <select id="getInspectionCompletedProductsByInspectorAndKeyword"
            resultType="com.earth.ureverse.inspector.dto.response.ProductSearchResultDto">

        SELECT
        p.product_id AS productId,
        b.name AS brandName,
        c.name AS categoryName,
        p.status AS status,
        img.url AS imageUrl,
        TO_CHAR(p.created_at, 'YYYY-MM-DD HH24:MI:SS') AS createdAt,
        bcc.point AS expectedPoint
        FROM product p
        JOIN brand b ON p.brand_id = b.brand_id
        JOIN category c ON p.category_id = c.category_id
        JOIN brand_category_combination bcc
        ON p.brand_id = bcc.brand_id
        AND p.category_id = bcc.category_id
        AND bcc.inspector_id = #{inspectorId}
        LEFT JOIN (
        SELECT product_id,
        MIN(url) KEEP (DENSE_RANK FIRST ORDER BY created_at) AS url
        FROM product_image
        GROUP BY product_id
        ) img ON img.product_id = p.product_id
        WHERE p.status IN ('REJECT', 'SECOND_INSPECT', 'DELIVERY_REQUEST', 'DELIVERING', 'FINISH')
        <if test="keyword != null and keyword != ''">
            AND (LOWER(c.name) LIKE '%' || LOWER(#{keyword}) || '%'
            OR LOWER(b.name) LIKE '%' || LOWER(#{keyword}) || '%')
        </if>
        ORDER BY p.created_at DESC
        OFFSET #{offset} ROWS FETCH NEXT #{pageSize} ROWS ONLY

    </select>

    <!-- 검수 미완료 상품 검색 -->
    <select id="getPendingInspectionProductsByInspectorAndKeyword"
            resultType="com.earth.ureverse.inspector.dto.response.ProductSearchResultDto">

        SELECT
        p.product_id AS productId,
        b.name AS brandName,
        c.name AS categoryName,
        p.status AS status,
        img.url AS imageUrl,
        TO_CHAR(p.created_at, 'YYYY-MM-DD HH24:MI:SS') AS createdAt,
        bcc.point AS expectedPoint
        FROM product p
        JOIN brand b ON p.brand_id = b.brand_id
        JOIN category c ON p.category_id = c.category_id
        JOIN brand_category_combination bcc
        ON p.brand_id = bcc.brand_id
        AND p.category_id = bcc.category_id
        AND bcc.inspector_id = #{inspectorId}
        LEFT JOIN (
        SELECT product_id,
        MIN(url) KEEP (DENSE_RANK FIRST ORDER BY created_at) AS url
        FROM product_image
        GROUP BY product_id
        ) img ON img.product_id = p.product_id
        WHERE p.status = 'FIRST_INSPECT'
        <if test="keyword != null and keyword != ''">
            AND (LOWER(c.name) LIKE '%' || LOWER(#{keyword}) || '%'
            OR LOWER(b.name) LIKE '%' || LOWER(#{keyword}) || '%')
        </if>
        ORDER BY p.created_at DESC
        OFFSET #{offset} ROWS FETCH NEXT #{pageSize} ROWS ONLY

    </select>

    <!-- 수거(완료전) 상품 목록 조회 (paid_point, updated_at) -->
    <select id="getPickupProducts"
            parameterType="com.earth.ureverse.admin.dto.request.PickupSearchRequest"
            resultType="com.earth.ureverse.admin.dto.response.PickupProductResponse">
        SELECT
            p.product_id AS id,
            (
            SELECT pi.url
            FROM product_image pi
            WHERE pi.product_id = p.product_id
            AND ROWNUM = 1
            ) AS image,
            b.name AS brand,
            c.main_name AS categoryMain,
            c.sub_name AS categorySub,
            p.grade AS grade,
            p.paid_point AS paid_point,
            p.status AS status,
            TO_CHAR(p.updated_at, 'YYYY-MM-DD HH24:MI:SS') AS updatedAt
            FROM product p
            JOIN brand b ON p.brand_id = b.brand_id
            JOIN category c ON p.category_id = c.category_id
        WHERE 1 = 1
            <if test="brand != null and brand != ''">
                AND b.name = #{brand}
            </if>
            <if test="categoryMain != null and categoryMain != ''">
                AND c.main_name = #{categoryMain}
            </if>
            <if test="categorySub != null and categorySub != ''">
                AND c.sub_name = #{categorySub}
            </if>
            <if test="grade != null and grade != ''">
                AND p.grade = #{grade}
            </if>
            <if test="statusList != null and statusList.size() > 0">
                AND p.status IN
                <foreach item="status" collection="statusList" open="(" separator="," close=")">
                    #{status}
                </foreach>
            </if>
        ORDER BY p.updated_at DESC
        OFFSET #{pageStart} ROWS FETCH NEXT #{offset} ROWS ONLY
    </select>

    <!-- 총 개수 조회(FINISH 상태 상품 목록) -->
    <select id="countPickupProducts"
            parameterType="com.earth.ureverse.admin.dto.request.PickupSearchRequest"
            resultType="long">
        SELECT COUNT(*)
        FROM product p
        JOIN brand b ON p.brand_id = b.brand_id
        JOIN category c ON p.category_id = c.category_id
        WHERE 1 = 1
            <if test="brand != null and brand != ''">
                AND b.name = #{brand}
            </if>
            <if test="categoryMain != null and categoryMain != ''">
                AND c.main_name = #{categoryMain}
            </if>
            <if test="categorySub != null and categorySub != ''">
                AND c.sub_name = #{categorySub}
            </if>
            <if test="grade != null and grade != ''">
                AND p.grade = #{grade}
            </if>
            <if test="statusList != null and statusList.size() > 0">
                AND p.status IN
                <foreach item="status" collection="statusList" open="(" separator="," close=")">
                    #{status}
                </foreach>
            </if>
    </select>


</mapper>